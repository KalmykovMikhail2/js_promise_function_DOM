{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","promiseOne","Promise","resolve","addEventListener","nodeName","id","printMessage","message","div","document","createElement","body","append","innerText","classList","add","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GASjBC,OARY,IAAIC,QAAQ,SAACC,GAC9BJ,EAAQK,iBAAiBJ,EAAW,WAClCG,EACYH,UAAAA,OAAAA,EACQD,+BAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GAFrD,UASN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAEnCD,SAASE,KAAKC,OAAOJ,GACrBA,EAAIK,UAAYN,EAChBC,EAAIM,UAAUC,IAAI,YAGpBC,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.87d5e509.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const promiseOne = new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} \n        on the element: ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n\n  return promiseOne;\n}\n\nconst printMessage = (message) => {\n  const div = document.createElement('div');\n\n  document.body.append(div);\n  div.innerText = message;\n  div.classList.add('message');\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}